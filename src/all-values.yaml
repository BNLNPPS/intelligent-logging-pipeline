#Optional config file for all 

test_pod:
  enabled: true
  image: bats/bats:1.8.2
  pullPolicy: IfNotPresent
loki:
  enabled: true
  isDefault: true
  url: http://{{ include "loki.serviceName" . }}:{{ .Values.loki.service.port }}

  extraVolumeMounts:
    - name: loki-storage
      mountPath: /var/loki

  extraVolumes:
    - name: loki-storage
      persistentVolumeClaim:
        claimName: loki-pvc

  config:
    storage_config:
      aws:
        s3: http://minio-service.minio.svc.cluster.local:9000/logs
        access_key_id: minioadmin
        secret_access_key: minioadmin
        s3forcepathstyle: true
        insecure: true 
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        shared_store: s3

    schema_config:
      configs:
        - from: 2024-01-01
          store: boltdb-shipper
          object_store: s3
          schema: v11
          index:
            prefix: index_
            period: 24h

    compactor:
      working_directory: /var/loki/compactor
      shared_store: s3

  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45

  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45

  datasource:
    jsonData: "{}"
    uid: ""


promtail:
  enabled: false

fluent-bit:
  enabled: false 
  config:
    service: |
      [SERVICE]
          Flush         1
          Log_Level     info
          Daemon        off
          Parsers_File  parsers.conf
          HTTP_Server   On
          HTTP_Listen   0.0.0.0
          HTTP_Port     2020
    inputs: |
      [INPUT]
          Name              tail
          Tag               kube.*
          Path              /var/log/containers/*.log
          Parser            docker
          DB                /var/log/flb_kube.db
          Mem_Buf_Limit     5MB
          Skip_Long_Lines   On
          Refresh_Interval  10
    filters: |
      [FILTER]
          Name                kubernetes
          Match               kube.*
          Kube_URL            https://kubernetes.default.svc:443
          Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
          Merge_Log           On
          Keep_Log            Off
          K8S-Logging.Parser  On
          K8S-Logging.Exclude Off
    outputs: |
      [OUTPUT]
          Name              loki
          Match             kube.*
          Host              {{(include "loki.serviceName" .)}}
          Port              {{ .Values.loki.service.port }}
          Path              /loki/api/v1/push
          Labels            {job="fluent-bit", namespace="$kubernetes['namespace_name']", pod="$kubernetes['pod_name']", container="$kubernetes['container_name']"}
          Auto_Kubernetes_Labels On
          Line_Format       json
          LogLevel          info
      # [OUTPUT]
      #   Name           kafka
      #   Match          *
      #   Brokers        kafka-service.kafka.svc.cluster.local:9092
      #   Topics         logsofcluster
      #   Timestamp_Key  @timestamp
      #   Labels         {job="fluent-bit", namespace="$kubernetes['namespace_name']", pod="$kubernetes['pod_name']", container="$kubernetes['container_name']"} 
      #   Retry_Limit    false
      #   # hides errors "Receive failed: Disconnected" when kafka kills idle connections
      #   rdkafka.log.connection.close false
      #   # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating
      #   rdkafka.queue.buffering.max.kbytes 10240
      #   # for logs you'll probably want this ot be 0 or 1, not more
      #   rdkafka.request.required.acks 1
    customParsers: |
      [PARSER]
          Name              docker
          Format            json
          Time_Key          time
          Time_Format       %Y-%m-%dT%H:%M:%S.%L
          Time_Keep         On
      

grafana:
  enabled: true
  sidecar:
    datasources:
      label: ""
      labelValue: ""
      enabled: true
      maxLines: 1000
  image:
    tag: 10.3.3
  service:
    type: NodePort

prometheus:
  enabled: false
  isDefault: false
  url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
  datasource:
    jsonData: "{}"

filebeat:
  enabled: false
  filebeatConfig:
    filebeat.yml: |
      # logging.level: debug
      filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
      output.logstash:
        hosts: ["logstash-loki:5044"]

logstash:
  enabled: false
  image: grafana/logstash-output-loki
  imageTag: 1.0.1
  filters:
    main: |-
      filter {
        if [kubernetes] {
          mutate {
            add_field => {
              "container_name" => "%{[kubernetes][container][name]}"
              "namespace" => "%{[kubernetes][namespace]}"
              "pod" => "%{[kubernetes][pod][name]}"
            }
            replace => { "host" => "%{[kubernetes][node][name]}"}
          }
        }
        mutate {
          remove_field => ["tags"]
        }
      }
  outputs:
    main: |-
      output {
        loki {
          url => "http://loki:3100/loki/api/v1/push"
          #username => "test"
          #password => "test"
        }
        # stdout { codec => rubydebug }
      }

proxy:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
