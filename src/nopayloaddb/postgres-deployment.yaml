apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: npps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox:1.36
        command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/data"]
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: data
      containers:
      - name: postgresql
        image: postgres:12
        securityContext:
          runAsUser: 999
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: npdb
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: npdb
        - name: POSTGRES_DB
          value: dbname
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - login
            - -d
            - dbname
          initialDelaySeconds: 300
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - login
            - -d
            - dbname
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/pgdata
          name: data
      volumes:
      - name: data